import heapq

def kthSmallest(mat, k):
    m, n = len(mat), len(mat[0])
    pq = [(sum(row[0] for row in mat), [0] * m)]
    
    for _ in range(k):
        curr_sum, indices = heapq.heappop(pq)
        for i, idx in enumerate(indices):
            if idx + 1 < n:
                new_indices = indices[:]
                new_indices[i] += 1
                new_sum = curr_sum - mat[i][idx] + mat[i][new_indices[i]]
                heapq.heappush(pq, (new_sum, new_indices))
    
    return curr_sum

mat = [[1, 3, 11], [2, 4, 6]]
k = 5
output = kthSmallest(mat, k)
print(output)
