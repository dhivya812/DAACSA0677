import numpy as np

def next_state(curr_state):
    rows, cols = curr_state.shape
    next_state = np.zeros((rows, cols))

    for i in range(1, rows - 1):
        for j in range(1, cols - 1):
            neighbors_sum = np.sum(curr_state[i-1:i+2, j-1:j+2]) - curr_state[i, j]
            if curr_state[i, j] == 1 and (neighbors_sum < 2 or neighbors_sum > 3):
                next_state[i, j] = 0
            elif curr_state[i, j] == 0 and neighbors_sum == 3:
                next_state[i, j] = 1
            else:
                next_state[i, j] = curr_state[i, j]

    return next_state

# Initial state
initial_state = np.array([[0, 0, 0, 0, 0],
                           [0, 0, 1, 0, 0],
                           [0, 0, 1, 0, 0],
                           [0, 0, 1, 0, 0],
                           [0, 0, 0, 0, 0]])

# Generating next state
next_gen_state = next_state(initial_state)

print(next_gen_state)
